该包是异处理包
	|--- 如何处理异常
	|--- Java提供的是异常处理的 - 抓抛模型
	1，抛，当我们执行代码时，一旦出现异常，就会在异常的代码处生成一个对应的异常类型的对象，
		病将此对抗抛出（自动抛，和手动抛）
			> 一旦抛出此异常类对象，那么程序就必须执行
			> 此异常类的对象抛给方法的跳用者。
			
	2，抓：抓住上一步抛出来的异常类的对象，如何抓？即为异常处理的方式。
			java提供了两种方式用来处理一个异常类的对象。
			处理的方法一：
			try{
				// 可能出现异常的代码
			}catch(Exceptinon e1){
				// 出炉的方式1
			}catch(Exceptinon e2){
				// 处理方式2
			}finally{
				// 一定要执行的代码
			}
		
	注：1，try内声明的变量，类似于局部变量，出了try{}语句，就不能被调用
		2，finally是可选的。
		3，catch语句内部是对异常对象的处理。
				>getMessage(); printStackTrace();
		4,可以有多个catch语句，try中抛出的异常类对象从上往下匹配catch中的异常类的类型，
			一旦满足就执行catch中的代码，执行完，就跳出气候的多条catch语句。
		5，如果异常处理了，那么气候的代码继续执行。
		6，若catch中多个异常类型是"并列"关系，孰上孰下都可以。
		   若catch中多个异常类型是“包含”关系，须将子类放在父类的上面，进行处理。否则报错！
		7，finally中存放的是一定会被执行的代码。不管try中，catch中是否仍有异常未被处理，以及是否有return语句
		8，try-catch是可以相互嵌套的。
		
	三，对于运行时异常来说，可以不显示式的进行处理，
		对于编译时异常来说，必须要显示式的进行处理。		
		
		
			
	


















代码提交步骤：
1，新建分支
	命令：git checkout -b lquan  
		或 
	git branch lquan
	git checkout lquan
	
2，提交修改的模块到本地仓库
	git add .
	然后，提交到本地仓库
	git commit -m "提交的模块的信息"


3，合并分支
	首先要钱还到切换到主分支，然后进行分支合并
	git merge lquan
	
4，将本地合并后的分支提交到远程
	git push origin master
	